// Trang ƒëƒÉng k√Ω g√≥i n√¢ng c·∫•p

import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import Payment from '../components/Payment';
import axios from 'axios';
import facebookImage from "../assets/images/facebook.jpg";
import instagramImage from "../assets/images/instragram.jpg";
import "../style/SubscriptionPlans.scss";
import { getMembershipPackages } from '../services/extraService';

const SubscriptionPlans = () => {
  const navigate = useNavigate();
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');
  const [paymentOpen, setPaymentOpen] = useState(false);
  const [user, setUser] = useState(null);
  const [packages, setPackages] = useState([]);
  const [loading, setLoading] = useState(true);

  const features = {
    free: [
      'Theo d√µi th·ªùi gian cai thu·ªëc',
      'Nh·∫≠t k√Ω cai thu·ªëc c∆° b·∫£n',
      'Th·ªëng k√™ ƒë∆°n gi·∫£n',
      'C·ªông ƒë·ªìng h·ªó tr·ª£'
    ],
    premium: [
      'T·∫•t c·∫£ t√≠nh nƒÉng c·ªßa g√≥i Mi·ªÖn ph√≠',
      'Nh·∫≠t k√Ω chi ti·∫øt v·ªõi h√¨nh ·∫£nh',
      'Th·ªëng k√™ n√¢ng cao',
      'T∆∞ v·∫•n chuy√™n gia',
      'K·∫ø ho·∫°ch cai thu·ªëc c√° nh√¢n h√≥a',
      '·ª®ng d·ª•ng kh√¥ng qu·∫£ng c√°o'
    ]
  };

  const handleUpgrade = () => {
    setPaymentOpen(true);
  };

  const handleCloseSnackbar = () => {
    setError('');
    setSuccess('');
  };

  const handlePaymentSuccess = async () => {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        navigate('/login');
        return;
      }

      const response = await axios.put('http://localhost:5000/api/auth/upgrade-member', {}, {
        headers: { Authorization: `Bearer ${token}` }
      });
      
      if (response.data && response.data.user) {
        // Ensure isMemberVip is a boolean
        const updatedUser = {
          ...response.data.user,
          isMemberVip: !!response.data.user.isMemberVip
        };
        localStorage.setItem('user', JSON.stringify(updatedUser));
        setUser(updatedUser);
        console.log('[SubscriptionPlans] User state after successful upgrade:', updatedUser); // DEBUG
        setSuccess('N√¢ng c·∫•p t√†i kho·∫£n th√†nh c√¥ng!');
        setTimeout(() => {
          navigate('/profile');
        }, 2000);
      }
    } catch (error) {
      console.error('L·ªói khi n√¢ng c·∫•p t√†i kho·∫£n:', error);
      if (error.response?.status === 401) {
        localStorage.removeItem('token');
        localStorage.removeItem('user');
        navigate('/login');
      } else if (error.response?.status === 400) {
        setError(error.response.data.message || 'Kh√¥ng th·ªÉ n√¢ng c·∫•p t√†i kho·∫£n. Vui l√≤ng th·ª≠ l·∫°i sau.');
      } else {
        setError('Kh√¥ng th·ªÉ n√¢ng c·∫•p t√†i kho·∫£n. Vui l√≤ng th·ª≠ l·∫°i sau.');
      }
    }
  };

  useEffect(() => {
    const userStr = localStorage.getItem("user");
    let currentUser = null;
    try {
      if (userStr && userStr !== 'undefined') {
        const parsedUser = JSON.parse(userStr);
        // Ensure isMemberVip is a boolean when initializing from localStorage
        currentUser = {
          ...parsedUser,
          isMemberVip: !!parsedUser.isMemberVip
        };
      }
    } catch (e) {
      currentUser = null;
    }

    if (!currentUser) {
      navigate('/login');
      return;
    }

    if (currentUser.role === "admin") {
      navigate("/admin/users");
      return;
    }

    setUser(currentUser);
    console.log('[SubscriptionPlans] Initial user state:', currentUser); // DEBUG

    // L·∫•y danh s√°ch g√≥i th√†nh vi√™n
    getMembershipPackages()
      .then((data) => {
        console.log('Membership packages data:', data);
        setPackages(data);
      })
      .catch((error) => {
        console.error('Error fetching membership packages:', error);
        // Fallback data n·∫øu API kh√¥ng ho·∫°t ƒë·ªông
        const fallbackPackages = [
          {
            id: 1,
            name: 'G√≥i Mi·ªÖn ph√≠',
            price: 0,
            durationInDays: 0,
            description: 'Tr·∫£i nghi·ªám c√°c t√≠nh nƒÉng c∆° b·∫£n'
          },
          {
            id: 2,
            name: 'G√≥i Premium',
            price: 99000,
            durationInDays: 30,
            description: 'Truy c·∫≠p ƒë·∫ßy ƒë·ªß t·∫•t c·∫£ t√≠nh nƒÉng cao c·∫•p'
          }
        ];
        setPackages(fallbackPackages);
      })
      .finally(() => setLoading(false));
  }, [navigate]);

  const isPremiumMember = user && (user.role === 'memberVip' || user.isMemberVip === true);
  console.log('[SubscriptionPlans] isPremiumMember:', isPremiumMember); // DEBUG
  console.log('[SubscriptionPlans] User role:', user?.role); // DEBUG
  console.log('[SubscriptionPlans] User isMemberVip:', user?.isMemberVip); // DEBUG

  console.log('SubscriptionPlans render - user:', user, 'loading:', loading, 'packages:', packages);

  if (!user || loading) {
    return (
      <div style={{ 
        display: 'flex', 
        justifyContent: 'center', 
        alignItems: 'center', 
        minHeight: '50vh',
        fontSize: '18px'
      }}>
        ƒêang t·∫£i...
      </div>
    );
  }

  return (
    <div className="homepage" style={{ minHeight: '100vh', backgroundColor: '#f8f9fa' }}>
      <section className="subscription-plans-section" style={{ padding: '40px 0' }}>
        <div className="container" style={{ maxWidth: '1200px', margin: '0 auto', padding: '0 20px' }}>
          <div style={{ padding: '20px 0', textAlign: 'center' }}>
            <h1 style={{ color: '#333', marginBottom: '20px' }}>G√≥i D·ªãch V·ª•</h1>
          </div>
          {isPremiumMember ? (
            <>
              <div className="card premium-status-card text-center mb-4">
                <i className="fas fa-award fa-5x mb-3"></i>
                <h2>
                  üéâ B·∫°n ƒë√£ ƒëƒÉng k√Ω g√≥i Premium!
                </h2>
                <p>
                  C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• Premium c·ªßa ch√∫ng t√¥i.
                </p>
                <button
                  className="btn btn-lg rounded-pill"
                  onClick={() => navigate('/profile')}
                >
                  Quay v·ªÅ trang c√° nh√¢n
                </button>
              </div>

              <h3 className="text-center mb-4">
                C√°c t√≠nh nƒÉng Premium b·∫°n ƒëang s·ª≠ d·ª•ng
              </h3>
              <div className="row justify-content-center">
                <div className="col-12 col-md-8">
                  <div className="card h-100">
                    <div className="card-body">
                      <h4 className="card-title mb-4">
                        G√≥i Premium - ƒêang ho·∫°t ƒë·ªông
                      </h4>
                      <ul className="list-unstyled mb-0">
                        {features.premium.map((feature, index) => (
                          <li key={index} className="d-flex align-items-center py-2">
                            <i className="fas fa-check-circle me-3"></i>
                            <span>{feature}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            </>
          ) : (
            <>
              <h2>
                Ch·ªçn g√≥i ph√π h·ª£p v·ªõi b·∫°n
              </h2>
              <p>
                N√¢ng c·∫•p l√™n Premium ƒë·ªÉ tr·∫£i nghi·ªám ƒë·∫ßy ƒë·ªß t√≠nh nƒÉng.
              </p>
              <div className="row justify-content-center">
                {packages.map((pkg) => (
                  <div key={pkg.id} className="col-12 col-md-6 col-lg-5 mb-4">
                    <div className="card h-100">
                      <div className="card-body">
                        <h4>{pkg.name}</h4>
                        <h3>
                          {pkg.price === 0 ? 'Mi·ªÖn ph√≠' : `${pkg.price.toLocaleString()} VNƒê`}
                          {pkg.durationInDays > 0 && <span className="text-muted">/{pkg.durationInDays} ng√†y</span>}
                        </h3>
                        <p>{pkg.description}</p>
                        <hr className="my-3" />
                        <ul className="list-unstyled mb-0">
                          {(pkg.price === 0 ? features.free : features.premium).map((feature, index) => (
                            <li key={index} className="d-flex align-items-center py-2">
                              <i className="fas fa-check-circle me-3"></i>
                              <span>{feature}</span>
                            </li>
                          ))}
                        </ul>
                        {pkg.price === 0 ? (
                          <button className="btn btn-lg btn-outline-secondary mt-4 rounded-pill" disabled>ƒêang s·ª≠ d·ª•ng</button>
                        ) : (
                          <button className="btn btn-lg rounded-pill mt-4" onClick={handleUpgrade}>N√¢ng c·∫•p ngay</button>
                        )}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </>
          )}

          {/* Snackbar/Alert for messages */}
          {error && (
            <div className="alert alert-danger alert-dismissible fade show text-center mt-4" role="alert">
              {error}
              <button type="button" className="btn-close" onClick={handleCloseSnackbar} aria-label="Close"></button>
            </div>
          )}
          {success && (
            <div className="alert alert-success alert-dismissible fade show text-center mt-4" role="alert">
              {success}
              <button type="button" className="btn-close" onClick={handleCloseSnackbar} aria-label="Close"></button>
            </div>
          )}

          {paymentOpen && <Payment open={paymentOpen} onClose={() => setPaymentOpen(false)} onSuccess={handlePaymentSuccess} />}
        </div>
      </section>

      {/* Contact Section */}
      <footer className="footer">
        <div className="container">
          <div className="social-icons">
            <a
              href="https://www.facebook.com/loccphamxuan?locale=vi_VN"
              target="_blank"
              rel="noopener noreferrer"
              aria-label="Facebook"
            >
              <img
                src={facebookImage}
                alt="Facebook"
                style={{ width: "36px", height: "36px" }}
              />
            </a>
            <a
              href="https://www.instagram.com/xlocpham/"
              target="_blank"
              rel="noopener noreferrer"
              aria-label="Instagram"
            >
              <img
                src={instagramImage}
                alt="Instagram"
                style={{ width: "36px", height: "36px" }}
              />
            </a>
          </div>
          <p className="copyright">
            &copy; 2024 H·ªó tr·ª£ cai nghi·ªán. ƒê√£ ƒëƒÉng k√Ω b·∫£n quy·ªÅn.
          </p>
        </div>
      </footer>
    </div>
  );
};

export default SubscriptionPlans; 
